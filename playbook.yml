##
# Ansible playbook for setting up a LAMP development server on Ubuntu 12.04.
#

---
- hosts: ccda-receiver
  user: root

  vars_files:
    - settings.yml

  tasks:
    - name: General | Install required packages.
      action: apt pkg=$item state=installed update_cache=yes
      tags: common
      with_items:
        - python-software-properties
        - g++
        - make
        - curl

    - name: General | MOTD for Ansible
      action: copy src=files/etc/update-motd.d/95-ansible dest=/etc/update-motd.d/95-ansible mode=755
      tags: common

    - name: Node.js | Add the node.js PPA
      action: command add-apt-repository -y ppa:chris-lea/node.js
              creates=/etc/apt/sources.list.d/chris-lea-node_js-${ansible_lsb.codename}.list
      register: added_node_ppa

    - name: Node.js | Update the apt cache for the new repository
      action: apt update_cache=yes
      when_boolean: ${added_node_ppa.changed}

    - name: Node.js | Install nodejs and npm
      tags: nodejs
      action: apt pkg=$item state=installed
      when_boolean: ${added_node_ppa.changed}
      with_items:
        - nodejs
        - npm
        - nodejs-dev

    - name: Mongodb | Add the Mongodb key
      action: command apt-key adv --keyserver keyserver.ubuntu.com --recv 7F0CEB10
      tags: mongodb

    - name: Mongodb | Add the Mongodb repo
      tags: mongodb
      action: copy 
              src=files/etc/apt/sources.list.d/10gen.list
              dest=/etc/apt/sources.list.d/10gen.list
              owner=root group=root mode=0644
      register: added_mongo_ppa

    - name: Mongodb | Install packages
      action: apt pkg=mongodb-10gen state=installed update_cache=yes
      when_boolean: ${added_mongo_ppa.changed}
      tags: mongodb

    - name: CCDA-R | Install packages
      tags: ccda-receiver
      action: apt pkg=$item state=installed
      with_items:
        - libxml2-dev
        - python-software-properties
        - g++
        - make

    - name: CCDA-R | git clone
      tags: ccda-receiver
      action: git repo=https://github.com/chb/json_ccda
                  dest=/opt/ccda-receiver
                  version=HEAD

    - name: CCDA-R | npm install dependencies
      tags: ccda-receiver
      action: command npm install
              chdir=/opt/ccda-receiver

    - name: CCDA-R | copy rxnorm concepts
      tags: ccda-receiver-mongo
      action: copy 
              src=files/rxnorm-mongo.tgz
              dest=/tmp/rxnorm-mongo.tgz
              owner=root group=root mode=0644

    - name: CCDA-R | extract rxnorm concepts
      tags: ccda-receiver-mongo
      action: command tar -xzvf rxnorm-mongo.tgz
              chdir=/tmp

    - name: CCDA-R | restore rxnorm concepts
      tags: ccda-receiver-mongo
      action: command mongorestore /tmp/mongodb-dump --drop


    - name: CCDA-R | startup scripts
      tags: ccda-receiver
      action: template 
              src=files/etc/init/${item}.j2
              dest=/etc/init/$item
              owner=root group=root mode=0644
      with_items:
        - ccda-receiver.conf
        - ccda-receiver-apps.conf

    - name: CCDA-R | create sample data dir
      tags: ccda-receiver
      action: file path=/tmp/sample_files/ state=directory

    - name: CCDA-R | copy sample patient data
      tags: ccda-receiver
      action: copy src=$item dest=/tmp/sample_files/
      with_fileglob: files/tmp/sample_files/*.xml

    - name: CCDA-R | list sample files
      tags: ccda-receiver
      action: split_sample_filename name=$item
      with_fileglob: files/tmp/sample_files/*.xml
      register: to_post

    - name: CCDA-R | install sample patients
      tags: ccda-receiver
      action: command curl -X POST 
                           -d @${item.file}
                           ${ccda_receiver_url}/internal/addPatient/${item.pid}
              chdir=/tmp/sample_files
      with_items:  ${to_post.results}

    - name: CCDA-R | install default apps - prepare
      tags: ccda-receiver
      action: template
              src=files/tmp/bootstrap-ccda.sh.j2
              dest=/tmp/bootstrap-ccda.sh
              owner=root group=root mode=0600

    - name: CCDA-R | install default apps script - run
      tags: ccda-receiver
      action: command sh bootstrap-ccda.sh chdir=/tmp

    - name: CCDA-R | cleanup tmp files
      tags: ccda-receiver
      action: file path=$item state=absent
      with_items: 
        - /tmp/rxnorm-mongo.tgz
        - /tmp/mongodb-dump
        - /tmp/bootstrap-ccda.sh
        - /tmp/sample_files

    - name: CCDA-R | run servers
      tags: ccda-receiver
      action: service name=$item state=running
      with_items: 
        - ccda-receiver
        - ccda-receiver-apps
